# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Pattern Submission Workflow

on:
  push:
    paths:
      - "python-test-samples/**"
permissions:
  contents: read
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: Stockopedia/action-get-changed-files@v1
      id: get_changed
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        ignore: "**/+(.github)"
        foldersOnly: false
        format: csv
    - name: Echo changed files
      id: setfiles
      run: |
        files=${{ steps.get_changed.outputs.changed }}
        echo $files
        echo "FILES=$files" >> $GITHUB_OUTPUT
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Get new folder
      id: setfolders
      run: |
        python -m pip install --upgrade pip
        pip install github-action-utils
        python .github/workflows/getPatternFolder.py "${{ steps.setfiles.outputs.FILES }}"
    - name: Install dependencies
      run: |
        cd ${{ steps.setfolders.outputs.folders }}
        pip install flake8 pytest boto3
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f tests/requirements.txt ]; then pip install -r tests/requirements.txt; fi
    - name: Lint with flake8
      run: |
        cd ${{ steps.setfolders.outputs.folders }}
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        export AWS_DEFAULT_REGION=us-east-1
        cd ${{ steps.setfolders.outputs.folders }}
        pytest -s tests/unit  -v