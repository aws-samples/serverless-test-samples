# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for serverless-test-workshop

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    Architectures:
      - x86_64

Parameters:
  iECRStreamlitPort:
    Type: Number
    Description: ECR TCP port for Streamlit UI hosting.
    Default: "8501"

Resources:
  # DynamoDB Resource https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html

  # This single-table DynamoDB design has a generic Partition Key (PK) and Sort Key (RK), and the item fields
  # are dependent on the item type:
  #  "Unicorn Items"  :  PK = {id}, SK = "LOCATION", STATUS = "AVAILABLE|RESERVED|RETIRED"
  #  "Summary Items" :  PK = {statistic}, SK = "STAT", data = {value}

  UnicornInventoryTable:
    Type: AWS::DynamoDB::Table
    UpdateReplacePolicy: Delete
    Properties:
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: LOCATION
          AttributeType: S
        - AttributeName: STATUS
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: "GSI_LOCATION"
          KeySchema:
            - AttributeName: "LOCATION"
              KeyType: "HASH"
            - AttributeName: "STATUS"
              KeyType: "RANGE"
          Projection:
            ProjectionType: "ALL"
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: true
    Metadata:
      SamResourceId: UnicornInventoryTable

  # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  UnicornInventoryBucket:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Delete
    Properties:
      BucketName: !Sub "unicorn-inv-${AWS::StackName}-${AWS::AccountId}"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: True
    Metadata:
      SamResourceId: SampleBucket

  # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
  # The Lambda function supports the /request-url-for-inventory endpoint
  # The function returns a signed url for uploading a Unicorn inventory to S3

  CheckoutFunction:
    Type: AWS::Serverless::Function
    Properties:
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref UnicornInventoryTable
      CodeUri: src/Checkout/
      Handler: app.lambda_handler
      Runtime: python3.12
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME:
            Ref: UnicornInventoryTable
      Events:
        Checkout:
          Type: Api
          Properties:
            Path: /checkout
            Method: post

  GetInventoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName: !Ref UnicornInventoryTable
      CodeUri: src/GetInventory/
      Handler: app.lambda_handler
      Runtime: python3.12
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME:
            Ref: UnicornInventoryTable
          DYNAMODB_INDEX_NAME: "GSI_LOCATION"
      Events:
        Checkout:
          Type: Api
          Properties:
            Path: /list/{location}
            Method: get
            RequestParameters:
              - method.request.header.Authorization
              - method.request.querystring.page_token:
                  Required: false
                  Caching: false
              - method.request.querystring.available:
                  Required: false
                  Caching: false

  GetLocations:
    Type: AWS::Serverless::Function
    Properties:
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName: !Ref UnicornInventoryTable
      CodeUri: src/GetLocations/
      Handler: app.lambda_handler
      Runtime: python3.12
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME:
            Ref: UnicornInventoryTable
      Events:
        Checkout:
          Type: Api
          Properties:
            Path: /locations
            Method: get
            RequestParameters:
              - method.request.header.Authorization

  GetSignedUrlForInventoryFilePost:
    Type: AWS::Serverless::Function
    Properties:
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - S3WritePolicy:
            BucketName: !Sub "unicorn-inv-${AWS::StackName}-${AWS::AccountId}"
      CodeUri: src/GetSignedUrlForInventoryFilePost/
      Handler: app.lambda_handler
      Runtime: python3.12
      Environment:
        Variables:
          S3_BUCKET_NAME: !Sub "unicorn-inv-${AWS::StackName}-${AWS::AccountId}"
      Events:
        Checkout:
          Type: Api
          Properties:
            Path: /geturl
            Method: get

  FileValidator:
    Type: AWS::Serverless::Function
    Properties:
      Tracing: Active
      CodeUri: src/FileValidator/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - AWSXrayWriteOnlyAccess
        - S3ReadPolicy:
            BucketName: !Sub "unicorn-inv-${AWS::StackName}-${AWS::AccountId}"
  
  CreateLocations:
    Type: AWS::Serverless::Function
    Properties:
      Tracing: Active
      CodeUri: src/CreateLocations/
      Handler: app.lambda_handler
      Runtime: python3.12
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME:
            Ref: UnicornInventoryTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnicornInventoryTable
  
  # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
  SFProcessFile:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub "${AWS::StackName}-SFProcessFile-${AWS::AccountId}"
      DefinitionUri: src/FileProcessor/StateMachine.asl.json
      DefinitionSubstitutions:
        ValidateCSVFile: !GetAtt FileValidator.Arn
        UnicornTable: !Ref UnicornInventoryTable
        CreateLocations: !GetAtt CreateLocations.Arn
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref CreateLocations
        - LambdaInvokePolicy:
            FunctionName: !Ref FileValidator
        - DynamoDBCrudPolicy:
            TableName: !Ref UnicornInventoryTable
        - S3ReadPolicy:
            BucketName: !Sub "unicorn-inv-${AWS::StackName}-${AWS::AccountId}"
        - StepFunctionsExecutionPolicy:
            StateMachineName: !Sub "${AWS::StackName}-SFProcessFile-${AWS::AccountId}"
      Events:
        NewInventoryFileInS3:
          Type: EventBridgeRule
          Properties:
            EventBusName: default
            Pattern:
              source:
                - aws.s3
              detail-type:
                - Object Created
              detail:
                bucket:
                  name:
                    - !Ref UnicornInventoryBucket

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ApiEndpoint:
    Description: "API Gateway endpoint URL, set this in the Demo UI: Administration tab, API Endpoint"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  DynamoDBTableName:
    Description: "Unicorn Inventory DynamoDB table name"
    Value: !Ref UnicornInventoryTable
  UnicornInventoryBucket:
    Description: "Unicorn Inventory Bucket Name"
    Value: !Ref UnicornInventoryBucket
  GetInventoryFunction:
    Description: "Name of the Lambda function required in the 'Invoke a Lambda function in the cloud' section."
    Value: !Ref GetInventoryFunction
  GetFileValidatorARN:
    Description: "ARN of the Lambda function required in the 'OPTIONAL: Invoke a Lambda function in the cloud' section."
    Value: !GetAtt FileValidator.Arn
